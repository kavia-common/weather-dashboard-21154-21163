{"is_source_file": true, "format": "JavaScript", "description": "This file defines a React hook 'useWeather' that manages weather data fetching, location selection, geolocation, city suggestions with debounce, and switching between weather data providers. It interfaces with external APIs to obtain weather and location suggestions, handles local storage to persist last location, and manages UI state such as loading and error states.", "external_files": ["../api/openWeather", "../api/openMeteo"], "external_methods": ["owSuggestCities", "owOneCall", "nominatimSuggest", "openMeteoDaily"], "published": ["useWeather"], "classes": [], "methods": [{"name": "useWeather()", "description": "Main hook managing weather data, location, suggestions, and user interactions.", "scope": "", "scopeKind": ""}, {"name": "getBrowserGeolocation(timeout = 5000)", "description": "Utility function to get current position from browser geolocation API.", "scope": "", "scopeKind": ""}, {"name": "humanizeError(err, fallback = 'Failed to load weather')", "description": "Function to convert error objects into user-friendly messages.", "scope": "", "scopeKind": ""}], "calls": ["useCallback", "useEffect", "useMemo", "useRef", "useState", "localStorage.getItem", "localStorage.setItem", "navigator.geolocation.getCurrentPosition", "setTimeout", "clearTimeout", "setLocation", "setWeather", "setError", "setSuggestions", "setSearchText", "setIsLoading"], "search-terms": ["useWeather", "geolocation", "city suggestions", "weather provider switch", "debounce input", "OpenWeather API", "OpenMeteo API", "weather forecast", "last location persistence", "React hook"], "state": 2, "file_id": 17, "knowledge_revision": 88, "git_revision": "57db027d8fcdd9c7c416623610321d1d365603d8", "revision_history": [{"37": ""}, {"52": "81849b733866fff455e4981b99f38c589d28d97e"}, {"53": "81849b733866fff455e4981b99f38c589d28d97e"}, {"54": "81849b733866fff455e4981b99f38c589d28d97e"}, {"55": "81849b733866fff455e4981b99f38c589d28d97e"}, {"59": "5a7dc454f0b919f5630106389652fa4e97801f9f"}, {"64": "5a7dc454f0b919f5630106389652fa4e97801f9f"}, {"79": "921e1964e320d21b93ba7b80779bcbe9985e06e7"}, {"87": "57db027d8fcdd9c7c416623610321d1d365603d8"}, {"88": "57db027d8fcdd9c7c416623610321d1d365603d8"}], "ctags": [{"_type": "tag", "name": "DEFAULT_CITY", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^const DEFAULT_CITY = { name: 'San Francisco', country: 'US', lat: 37.7749, lon: -122.4194 };$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "country", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^const DEFAULT_CITY = { name: 'San Francisco', country: 'US', lat: 37.7749, lon: -122.4194 };$/", "language": "JavaScript", "kind": "property", "scope": "DEFAULT_CITY", "scopeKind": "class"}, {"_type": "tag", "name": "getBrowserGeolocation", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^function getBrowserGeolocation(timeout = 5000) {$/", "language": "JavaScript", "kind": "function", "signature": "(timeout = 5000)"}, {"_type": "tag", "name": "hasOWKey", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^const hasOWKey = !!process.env.REACT_APP_OPENWEATHER_API_KEY;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "humanizeError", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^function humanizeError(err, fallback = 'Failed to load weather') {$/", "language": "JavaScript", "kind": "function", "signature": "(err, fallback = 'Failed to load weather')"}, {"_type": "tag", "name": "lat", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^const DEFAULT_CITY = { name: 'San Francisco', country: 'US', lat: 37.7749, lon: -122.4194 };$/", "language": "JavaScript", "kind": "property", "scope": "DEFAULT_CITY", "scopeKind": "class"}, {"_type": "tag", "name": "lon", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^const DEFAULT_CITY = { name: 'San Francisco', country: 'US', lat: 37.7749, lon: -122.4194 };$/", "language": "JavaScript", "kind": "property", "scope": "DEFAULT_CITY", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^const DEFAULT_CITY = { name: 'San Francisco', country: 'US', lat: 37.7749, lon: -122.4194 };$/", "language": "JavaScript", "kind": "property", "scope": "DEFAULT_CITY", "scopeKind": "class"}, {"_type": "tag", "name": "useWeather", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/hooks/useWeather.js", "pattern": "/^export default function useWeather() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}], "hash": "3342fc8cd4d064fd7e6b177239d729aa", "format-version": 4, "code-base-name": "weather_dashboard_frontend", "filename": "weather_dashboard_frontend/src/hooks/useWeather.js", "fields": [{"name": "const DEFAULT_CITY = { name: 'San Francisco', country: 'US', lat: 37.7749, lon: -122.4194 };", "scope": "DEFAULT_CITY", "scopeKind": "class", "description": "unavailable"}]}