{"is_source_file": true, "format": "JavaScript", "description": "This file contains helper functions and API wrappers for interacting with the OpenWeather API, including URL construction, error handling, and fetching weather data, with some environment-based configuration and diagnostic utilities.", "external_files": [".env"], "external_methods": ["fetch", "URL"], "published": ["owSuggestCities", "owOneCall", "owSelfCheck"], "classes": [], "methods": [{"name": "warnIfMissingKeyOnce()", "description": "Warns once if the OpenWeather API key is missing from environment variables, guiding users to set it correctly.", "scope": "", "scopeKind": ""}, {"name": "ensureOk(response, defaultMessage)", "description": "Checks fetch responses for HTTP errors. Parses response text for error details and throws descriptive Errors based on status codes such as 401, 403, 429.", "scope": "", "scopeKind": ""}, {"name": "buildOWUrl(pathAndQuery)", "description": "Constructs the full URL for API requests to OpenWeather, logs the request without the API key, and warns if the URL origin differs from the expected API domain.", "scope": "", "scopeKind": ""}, {"name": "getOneCallPath(lat, lon, key, preferV3 = false)", "description": "Determines the appropriate One Call API endpoint path, preferring v3.0 if specified or enabled via environment variables.", "scope": "", "scopeKind": ""}, {"name": "owCurrentAndForecast(lat, lon, key)", "description": "Fetches current weather and 7-day forecast from legacy v2.5 endpoints as a fallback if One Call API is unauthorized.", "scope": "", "scopeKind": ""}, {"name": "owSuggestCities(query, limit = 5)", "description": "Suggests cities based on a query string via OpenWeather geocoding API.", "scope": "", "scopeKind": ""}, {"name": "owOneCall(lat, lon)", "description": "Fetches current weather and daily forecast using the One Call API, with fallback mechanisms for authorization issues.", "scope": "", "scopeKind": ""}, {"name": "owSelfCheck()", "description": "Perform a quick diagnostic request to verify weather API connectivity and credentials.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "new URL", "ensureOk", "buildOWUrl", "getOneCallPath", "owCurrentAndForecast"], "search-terms": ["OpenWeather API helper", "weather data fetch", "API URL construction", "fallback endpoints", "environment config", "API key warning"], "state": 2, "file_id": 13, "knowledge_revision": 77, "git_revision": "921e1964e320d21b93ba7b80779bcbe9985e06e7", "revision_history": [{"29": ""}, {"51": "81849b733866fff455e4981b99f38c589d28d97e"}, {"57": "5a7dc454f0b919f5630106389652fa4e97801f9f"}, {"60": "326a243c9314a816972e71b4d0da0ea10ef58ddd"}, {"63": "1fd1fc6dde7128df6df9fb9531ec911d2c28a5d7"}, {"77": "921e1964e320d21b93ba7b80779bcbe9985e06e7"}], "ctags": [{"_type": "tag", "name": "ICON_BASE", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^const ICON_BASE = 'https:\\/\\/openweathermap.org\\/img\\/wn';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "OW_API_ORIGIN", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^const OW_API_ORIGIN = 'https:\\/\\/api.openweathermap.org';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "buildOWUrl", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function buildOWUrl(pathAndQuery) {$/", "language": "JavaScript", "kind": "function", "signature": "(pathAndQuery)"}, {"_type": "tag", "name": "didWarnMissingKey", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^let didWarnMissingKey = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "ensureOk", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^async function ensureOk(response, defaultMessage) {$/", "language": "JavaScript", "kind": "function", "signature": "(response, defaultMessage)"}, {"_type": "tag", "name": "getOneCallPath", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function getOneCallPath(lat, lon, key, preferV3 = false) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon, key, preferV3 = false)"}, {"_type": "tag", "name": "owCurrentAndForecast", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^async function owCurrentAndForecast(lat, lon, key) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon, key)"}, {"_type": "tag", "name": "owOneCall", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owOneCall(lat, lon) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon)"}, {"_type": "tag", "name": "owSelfCheck", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owSelfCheck() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "owSuggestCities", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owSuggestCities(query, limit = 5) {$/", "language": "JavaScript", "kind": "function", "signature": "(query, limit = 5)"}, {"_type": "tag", "name": "warnIfMissingKeyOnce", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function warnIfMissingKeyOnce() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}], "hash": "63bdf7f7586a1a84b7996204f94d358c", "format-version": 4, "code-base-name": "weather_dashboard_frontend", "filename": "weather_dashboard_frontend/src/api/openWeather.js", "fields": [{"name": "let didWarnMissingKey = false;", "scope": "", "scopeKind": "", "description": "unavailable"}]}