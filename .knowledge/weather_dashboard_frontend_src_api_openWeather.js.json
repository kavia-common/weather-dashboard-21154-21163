{"is_source_file": true, "format": "JavaScript", "description": "This file provides helper functions for interacting with the OpenWeather API, including geocoding city suggestions, fetching weather data, and performing self-checks. It manages API URL construction, error handling, and configuration via environment variables.", "external_files": [], "external_methods": ["fetch"], "published": ["owSuggestCities", "owOneCall", "owSelfCheck"], "classes": [], "methods": [{"name": "warnIfMissingKeyOnce()", "description": "Warns once if the OpenWeather API key environment variable is missing and guides setup.", "scope": "", "scopeKind": ""}, {"name": "ensureOk(response, defaultMessage)", "description": "Checks fetch response status, parses error messages, and throws detailed errors for failed requests.", "scope": "", "scopeKind": ""}, {"name": "buildOWUrl(pathAndQuery)", "description": "Constructs a full URL for OpenWeather API endpoints based on provided path.", "scope": "", "scopeKind": ""}, {"name": "getOneCallPath(lat, lon, key)", "description": "Determines the correct API endpoint path for the One Call API based on environment configuration.", "scope": "", "scopeKind": ""}, {"name": "owSuggestCities(query, limit = 5)", "description": "Suggests cities matching a query string using OpenWeather geocoding API.", "scope": "", "scopeKind": ""}, {"name": "owOneCall(lat, lon)", "description": "Fetches current weather and daily forecasts for specified coordinates using the OpenWeather One Call API.", "scope": "", "scopeKind": ""}, {"name": "owSelfCheck()", "description": "Performs a diagnostic request to verify connectivity and API access.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "ensureOk", "buildOWUrl", "getOneCallPath"], "search-terms": ["OpenWeather API", "geocoding", "weather forecast", "One Call API", "environment variables", "API key management", "weather data fetching"], "state": 2, "file_id": 13, "knowledge_revision": 63, "git_revision": "1fd1fc6dde7128df6df9fb9531ec911d2c28a5d7", "revision_history": [{"29": ""}, {"51": "81849b733866fff455e4981b99f38c589d28d97e"}, {"57": "5a7dc454f0b919f5630106389652fa4e97801f9f"}, {"60": "326a243c9314a816972e71b4d0da0ea10ef58ddd"}, {"63": "1fd1fc6dde7128df6df9fb9531ec911d2c28a5d7"}], "ctags": [{"_type": "tag", "name": "ICON_BASE", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^const ICON_BASE = 'https:\\/\\/openweathermap.org\\/img\\/wn';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "OW_API_ORIGIN", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^const OW_API_ORIGIN = 'https:\\/\\/api.openweathermap.org';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "buildOWUrl", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function buildOWUrl(pathAndQuery) {$/", "language": "JavaScript", "kind": "function", "signature": "(pathAndQuery)"}, {"_type": "tag", "name": "didWarnMissingKey", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^let didWarnMissingKey = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "ensureOk", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^async function ensureOk(response, defaultMessage) {$/", "language": "JavaScript", "kind": "function", "signature": "(response, defaultMessage)"}, {"_type": "tag", "name": "getOneCallPath", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function getOneCallPath(lat, lon, key) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon, key)"}, {"_type": "tag", "name": "owOneCall", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owOneCall(lat, lon) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon)"}, {"_type": "tag", "name": "owSelfCheck", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owSelfCheck() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "owSuggestCities", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owSuggestCities(query, limit = 5) {$/", "language": "JavaScript", "kind": "function", "signature": "(query, limit = 5)"}, {"_type": "tag", "name": "warnIfMissingKeyOnce", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function warnIfMissingKeyOnce() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}], "hash": "b4e89a6a610c7687f447efb648995bb0", "format-version": 4, "code-base-name": "weather_dashboard_frontend", "filename": "weather_dashboard_frontend/src/api/openWeather.js", "fields": [{"name": "let didWarnMissingKey = false;", "scope": "", "scopeKind": "", "description": "unavailable"}]}