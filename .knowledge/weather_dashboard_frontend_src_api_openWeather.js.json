{"is_source_file": true, "format": "JavaScript", "description": "This file provides helper functions and APIs to interact with the OpenWeatherMap service, including URL construction, error handling, and methods for fetching weather data, city suggestions, and performing self-check diagnostics.", "external_files": [".env", "fetch", "console", "URL"], "external_methods": ["fetch", "console.warn", "console.info"], "published": ["owSuggestCities", "owOneCall", "owSelfCheck"], "classes": [], "methods": [{"name": "warnIfMissingKeyOnce()", "description": "Logs a warning if the OpenWeather API key is missing or misconfigured in environment variables.", "scope": "", "scopeKind": ""}, {"name": "ensureOk(response, defaultMessage)", "description": "Checks fetch response status; throws error with detailed message if response is not OK.", "scope": "", "scopeKind": ""}, {"name": "buildOWUrl(pathAndQuery)", "description": "Builds a URL to OpenWeather API with diagnostics logging.", "scope": "", "scopeKind": ""}, {"name": "getOneCallPath(lat, lon, key, preferV3 = false)", "description": "Selects the endpoint version for the One Call API based on environment and preferences.", "scope": "", "scopeKind": ""}, {"name": "owCurrentAndForecast(lat, lon, key)", "description": "Fetches current weather and 7-day forecast using legacy endpoints as fallback.", "scope": "", "scopeKind": ""}, {"name": "owSuggestCities(query, limit = 5)", "description": "Suggests city names based on query string using OpenWeather geocoding API.", "scope": "", "scopeKind": ""}, {"name": "owOneCall(lat, lon)", "description": "Fetches current weather and forecast via OpenWeather's One Call API, with fallback to legacy endpoints if needed.", "scope": "", "scopeKind": ""}, {"name": "owSelfCheck()", "description": "Performs a diagnostic request to verify connectivity and API key validity with OpenWeather.", "scope": "", "scopeKind": ""}], "calls": ["warnIfMissingKeyOnce", "ensureOk", "buildOWUrl", "getOneCallPath", "fetch"], "search-terms": ["OpenWeather API", "weather data fetchers", "API key setup", "self check diagnostics", "legacy endpoint fallback"], "state": 2, "file_id": 13, "knowledge_revision": 84, "git_revision": "593c6cba975575582f531128dfb1f6209fa2a3cf", "revision_history": [{"29": ""}, {"51": "81849b733866fff455e4981b99f38c589d28d97e"}, {"57": "5a7dc454f0b919f5630106389652fa4e97801f9f"}, {"60": "326a243c9314a816972e71b4d0da0ea10ef58ddd"}, {"63": "1fd1fc6dde7128df6df9fb9531ec911d2c28a5d7"}, {"77": "921e1964e320d21b93ba7b80779bcbe9985e06e7"}, {"83": "57db027d8fcdd9c7c416623610321d1d365603d8"}, {"84": "593c6cba975575582f531128dfb1f6209fa2a3cf"}], "ctags": [{"_type": "tag", "name": "ICON_BASE", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^const ICON_BASE = 'https:\\/\\/openweathermap.org\\/img\\/wn';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "OW_API_ORIGIN", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^const OW_API_ORIGIN = 'https:\\/\\/api.openweathermap.org';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "buildOWUrl", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function buildOWUrl(pathAndQuery) {$/", "language": "JavaScript", "kind": "function", "signature": "(pathAndQuery)"}, {"_type": "tag", "name": "didWarnMissingKey", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^let didWarnMissingKey = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "ensureOk", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^async function ensureOk(response, defaultMessage) {$/", "language": "JavaScript", "kind": "function", "signature": "(response, defaultMessage)"}, {"_type": "tag", "name": "getOneCallPath", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function getOneCallPath(lat, lon, key, preferV3 = false) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon, key, preferV3 = false)"}, {"_type": "tag", "name": "owCurrentAndForecast", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^async function owCurrentAndForecast(lat, lon, key) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon, key)"}, {"_type": "tag", "name": "owOneCall", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owOneCall(lat, lon) {$/", "language": "JavaScript", "kind": "function", "signature": "(lat, lon)"}, {"_type": "tag", "name": "owSelfCheck", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owSelfCheck() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "owSuggestCities", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^export async function owSuggestCities(query, limit = 5) {$/", "language": "JavaScript", "kind": "function", "signature": "(query, limit = 5)"}, {"_type": "tag", "name": "warnIfMissingKeyOnce", "path": "/home/kavia/workspace/code-generation/weather-dashboard-21154-21163/weather_dashboard_frontend/src/api/openWeather.js", "pattern": "/^function warnIfMissingKeyOnce() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}], "hash": "090db90ff5945658df960e93104e433b", "format-version": 4, "code-base-name": "weather_dashboard_frontend", "filename": "weather_dashboard_frontend/src/api/openWeather.js", "fields": [{"name": "let didWarnMissingKey = false;", "scope": "", "scopeKind": "", "description": "unavailable"}]}